env:
  DIRECTORY: dist
  PROJECT_NAME: plex-skipper


name: Release

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]

jobs:
  Version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      version_changed: ${{ steps.check_version.outputs.version_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check for version change
        id: check_version
        run: |
          if git diff --name-only HEAD~1..HEAD | grep -q '^package\.json$'; then
            VERSION_CHANGED=1
          else
            VERSION_CHANGED=0
          fi
          echo "version_changed=$VERSION_CHANGED" >> "$GITHUB_OUTPUT"
      - name: Get version
        if: ${{ steps.check_version.outputs.version_changed == '1' }}
        id: get_version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
  
  Build:
    needs: Version
    if: ${{ needs.Version.outputs.version_changed == '1' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Build chrome
        run: pnpm run build
      - name: Build firefox
        run: pnpm run build:firefox
      - name: Zip chrome extension
        run: pnpm run zip
      - name: Zip firefox extension
        run: pnpm run zip:firefox
      - name: Upload extension artefact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.DIRECTORY }}
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: "v${{ needs.Version.outputs.version }}"
          name: "v${{ needs.Version.outputs.version }}"
          draft: false
          prerelease: false
          files: |
            .output/${{env.PROJECT_NAME}}-${{ needs.Version.outputs.version }}-chrome.zip
            .output/${{env.PROJECT_NAME}}-${{ needs.Version.outputs.version }}-firefox.zip
            .output/${{env.PROJECT_NAME}}-${{ needs.Version.outputs.version }}-sources.zip

  Submit:
    needs: [Build, Version]
    if: ${{ needs.Version.outputs.version_changed == '1' }}
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Submit to stores
        working-directory: artifact
        run: pnpm wxt submit\
          --chrome-zip .output/${{env.PROJECT_NAME}}-${{ needs.Version.outputs.version }}-chrome.zip
          # --firefox-zip .output/${{env.PROJECT_NAME}}-${{ needs.Version.outputs.version }}-firefox.zip --firefox-sources-zip .output/${{env.PROJECT_NAME}}-${{ needs.Version.outputs.version }}-sources.zip
        env:
          CHROME_EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
          CHROME_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
          CHROME_SKIP_SUBMIT_REVIEW: true
          # FIREFOX_EXTENSION_ID: ${{ secrets.FIREFOX_EXTENSION_ID }}
          # FIREFOX_JWT_ISSUER: ${{ secrets.FIREFOX_JWT_ISSUER }}
          # FIREFOX_JWT_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}
          # FIREFOX_CHANNEL: listed